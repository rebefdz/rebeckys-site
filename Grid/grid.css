




.cell {
    width: calc(10vw / 6);
    height: calc(10vw / 6);
    background-color: blue;
      -webkit-transition:all .4s ease-in-out;
      -moz-transition:all .4s ease-in-out;
    border-radius: 10% / 50%;
     transition:all .4s ease-in-out;  
  }
  
  
  .fill {
    background-color:white;
  }
  
  
  #container {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  
  #container{
    position:absolute;
    top:60%;
    left:15%;
    transform:translate(-50%,-50%);
  }
  
  #container2 {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  #container2{
    position:absolute;
    top:60%;
    left:30%;
    transform:translate(-50%,-50%);
  }
  
  #container3 {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  #container3{
    position:absolute;
    top:60%;
    left:45%;
    transform:translate(-50%,-50%);
  }
  
  #container4 {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  #container4{
    position:absolute;
    top:60%;
    left:60%;
    transform:translate(-50%,-50%);
  }
  
  #container5 {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  #container5{
    position:absolute;
    top:60%;
    left:75%;
    transform:translate(-50%,-50%);
  }
  
  #container6 {
  /* Oddly enough, setting the width and height with the same unit — vw — allows the container to scale proportionally. */
    width: 10vw;
    height: 10vw;
    display: flex;
    flex-wrap: wrap;
  }
  
  #container6{
    position:absolute;
    top:60%;
    left:90%;
    transform:translate(-50%,-50%);
  }
  
  .cell:hover {
      border-radius:50%;
        transform: rotate(180deg);
   
  }
  
  .fill:hover{
    background-color:pink;
  }

